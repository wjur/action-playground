---
name: put-label

on:
  workflow_run:
    workflows: [ "pr-artifact" ]
    types:
      - completed

permissions: write-all

jobs:
  setup:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      head_commit: ${{ steps.find-common-commit.outputs.head_commit }}
      merge_base: ${{ steps.find-common-commit.outputs.merge_base }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Find first common commit
        id: find-common-commit
        run: |
          COMMIT_SHA=${{ github.event.workflow_run.head_commit.id }}
          git fetch origin master
          MERGE_BASE=$(git merge-base $COMMIT_SHA master)
          echo "First common commit (merge base) between $COMMIT_SHA (${{ github.event.workflow_run.head_branch }}) and main: $MERGE_BASE"
          echo "head_commit=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "merge_base=$MERGE_BASE" >> $GITHUB_OUTPUT
  get-commit-artifacts:
    needs: [setup]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Print shas
        env:
          HEAD_COMMIT: ${{needs.setup.outputs.head_commit}}
          MERGE_COMMIT: ${{needs.setup.outputs.merge_base}}
        run: |
          echo "head_commit=$HEAD_COMMIT"
          echo "merge_base=$MERGE_COMMIT"
      - name: Get head workflow_run_id
        id: get_workflow_run_id
        env:
          HEAD_COMMIT: ${{needs.setup.outputs.head_commit}}
          GH_TOKEN: ${{ github.token }}
        run: |
          workflow_run_id=$(gh api repos/${{ github.repository }}/actions/artifacts --jq ".artifacts[] | select(.workflow_run.head_sha == \"$HEAD_COMMIT\") | .workflow_run.id")
          echo "workflow_run_id=workflow_run_id" >> $GITHUB_OUTPUT

      - name: Download head artifact
        uses: actions/download-artifact@v4
        with:
          name: pr_name
          path: head_pr_name
          github-token: ${{ github.token }}
          run_id: ${{ steps.get_workflow_run_id.outputs.workflow_run_id }}

      - name: Get merge workflow_run_id
        id: get_merge_workflow_run_id
        env:
          MERGE_COMMIT: ${{needs.setup.outputs.merge_base}}
          GH_TOKEN: ${{ github.token }}
        run: |
          workflow_run_id=$(gh api repos/${{ github.repository }}/actions/artifacts --jq ".artifacts[] | select(.workflow_run.head_sha == \"MERGE_COMMIT\") | .workflow_run.id")
          echo "workflow_run_id=workflow_run_id" >> $GITHUB_OUTPUT

      - name: Download merge artifact
        uses: actions/download-artifact@v4
        with:
          name: pr_name
          path: merge_pr_name
          github-token: ${{ github.token }}
          if-no-files-found: error
          artifact_id: ${{ steps.get_merge_workflow_run_id.outputs.workflow_run_id }}
      - name: "Verify contents"
        run: |
          ls .
          echo "head_pr_name:"
          cat head_pr_name/pr_name.txt
          
          echo "merge_pr_name:"
          cat merge_pr_name/pr_name.txt
          
        
